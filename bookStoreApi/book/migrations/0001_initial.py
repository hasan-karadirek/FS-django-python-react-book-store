# Generated by Django 4.2.9 on 2024-05-07 18:18

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("Isbn", models.CharField(max_length=20, null=True)),
                ("env_no", models.IntegerField(unique=True)),
                ("title", models.CharField(max_length=255)),
                (
                    "cover",
                    models.CharField(
                        choices=[
                            ("PAPERBACK", "Paperback"),
                            ("HARDCOVER", "Hardcover"),
                            ("POCKET", "Pocket"),
                        ],
                        default="Paperback",
                        max_length=50,
                        verbose_name="Cover type of the book",
                    ),
                ),
                (
                    "year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1700),
                            django.core.validators.MaxValueValidator(2024),
                        ]
                    ),
                ),
                ("edition", models.CharField(max_length=255)),
                ("condition_description", models.CharField(max_length=255)),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("NEW", "New"),
                            ("LIKE_NEW", "Like New"),
                            ("GOOD", "Good"),
                            ("REASONABLE", "Reasonable"),
                        ],
                        default="New",
                        max_length=50,
                        verbose_name="Condition of the book",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("entry", models.DateField(default=datetime.datetime.now)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("OPEN", "Open"),
                            ("SOLD", "Sold"),
                            ("PENDING", "Pending"),
                            ("DRAFT", "Draft"),
                        ],
                        default="Draft",
                        max_length=50,
                        verbose_name="Status of the book",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="books",
                        to="book.author",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="PublishingHouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="BookTagAssociation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="book.book"
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="book.tag"
                    ),
                ),
            ],
            options={"unique_together": {("book", "tag")},},
        ),
        migrations.CreateModel(
            name="BookImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="book_images/")),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="books",
                        to="book.book",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="books",
                to="book.category",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="language",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="books",
                to="book.language",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="publishing_house",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="books",
                to="book.publishinghouse",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="tags",
            field=models.ManyToManyField(
                through="book.BookTagAssociation", to="book.tag"
            ),
        ),
    ]
